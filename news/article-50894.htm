<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <meta charset="utf-8">
    <link rel="canonical" href="https://sharefreenode.github.io/news/article-50894.htm" />
    <title>Spring-RabbitMQ 消费者消息确认案例实践</title>
        <meta name="description" content="文章目录    消费者消息确认模式分类 代码实现   模式一、NONE 模式二、MANUAL channel.basicAck 确认一个或多个消息 channel.basicNack 拒绝一个或多个消" />
        <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <!-- Favicons -->
    <link rel="icon" href="/assets/website/img/sharefreenode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ShareFreeNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sharefreenode.github.io/news/article-50894.htm" />
    <meta property="og:site_name" content="ShareFreeNode节点订阅站" />
    <meta property="og:title" content="Spring-RabbitMQ 消费者消息确认案例实践" />
    <meta property="og:image" content="https://sharefreenode.github.io/uploads/20240415/0209417c3cc4f420fc26bd993213075d.webp" />
        <meta property="og:release_date" content="2025-02-04T00:26:59" />
    <meta property="og:updated_time" content="2025-02-04T00:26:59" />
        <meta property="og:description" content="文章目录    消费者消息确认模式分类 代码实现   模式一、NONE 模式二、MANUAL channel.basicAck 确认一个或多个消息 channel.basicNack 拒绝一个或多个消" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring-RabbitMQ 消费者消息确认案例实践">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <link href="/assets/website/img/sharefreenode/apple-touch-icon.png" rel="apple-touch-icon">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,700,700i|Raleway:300,400,500,700,800|Montserrat:300,400,700" rel="stylesheet">
    <!-- Bootstrap CSS File -->
    <link href="/assets/website/js/frontend/sharefreenode/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- Libraries CSS Files -->
    <link href="/assets/website/js/frontend/sharefreenode/lib/font-awesome/css/font-awesome.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/animate/animate.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/ionicons/css/ionicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/magnific-popup/magnific-popup.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/ionicons/css/ionicons.min.css" rel="stylesheet">
    <!-- Main Stylesheet File -->
    <link href="/assets/website/css/sharefreenode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-300HPJ3F69"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-300HPJ3F69');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="body" data-page="detail">
    <!--==========================
    Header
  ============================-->
<header id="header">
    <div class="container">
        <div id="logo" class="pull-left">
            <a href="/">
                        Share<span>FreeNode</span>            </a>
            <!-- <a href="#body"><img src="/assets/addons/xcblog/img/sharefreenode/logo.png" alt="" title="" /></a>-->
        </div>
        <nav id="nav-menu-container">
            <ul class="nav-menu">
                                <li><a href="/">首页</a></li>
                                <li><a href="/free-nodes/">免费节点</a></li>
                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                <li><a href="/news/">新闻资讯</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav><!-- #nav-menu-container -->
    </div>
</header><!-- #header -->
    <!--==========================
    Page Banner Section
  ============================-->
    <section id="innerBanner">
        <div class="inner-content">
            <h2><span>Spring-RabbitMQ 消费者消息确认案例实践</span></h2>
            <p><a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span></p>
        </div>
    </section><!-- #Page Banner -->
    <main id="main">
        <!--==========================
      Clients Section
    ============================-->
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <section id="clients" class="wow fadeInUp">
                        <div class="container">
                            <div class="section-header">
                                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li><a href="#_4" rel="nofollow">消费者消息确认模式分类</a></li> <li><a href="#_10" rel="nofollow">代码实现</a></li> <li> <ul> <li><a href="#NONE_110" rel="nofollow">模式一、NONE</a></li> <li><a href="#MANUAL_124" rel="nofollow">模式二、MANUAL</a></li> <li><a href="#channelbasicAck__125" rel="nofollow">channel.basicAck 确认一个或多个消息</a></li> <li><a href="#channelbasicNack__154" rel="nofollow">channel.basicNack 拒绝一个或多个消息</a></li> <li><a href="#AUTO_185" rel="nofollow">模式三、AUTO</a></li> </ul> </li> </ul> </li> </ul> </div> <blockquote> <p>Springboot 版本： 2.7.0</p> </blockquote> <h2><a id="_4" rel="nofollow"></a>消费者消息确认模式分类</h2> <ol> <li>NONE：等同于rabbitMQ客户端的自动确认，只要投递了就认为是成功的。</li> <li>MANUAL：需要用户通过 channel 的 ack/nack 手动确认。</li> <li>AUTO（默认值）：自动模式，消费者正常执行结束认为成功，报错认为失败。</li> </ol> <h2><a id="_10" rel="nofollow"></a>代码实现</h2> <p>配置类：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">RabbitConfiguration</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">static</span><span class="token class-name">String</span> TOPIC_EXCHANGE<span class="token operator">=</span><span class="token string">"myExchange"</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">static</span><span class="token class-name">String</span> QUEUE_NAME<span class="token operator">=</span><span class="token string">"myQueue"</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">RabbitAdmin</span><span class="token function">amqpAdmin</span><span class="token punctuation">(</span><span class="token class-name">ConnectionFactory</span> connectionFactory<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">RabbitAdmin</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">RabbitTemplate</span><span class="token function">rabbitTemplate</span><span class="token punctuation">(</span><span class="token class-name">ConnectionFactory</span> connectionFactory<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">RabbitTemplate</span> template<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">RabbitTemplate</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>         template<span class="token punctuation">.</span><span class="token function">setMessageConverter</span><span class="token punctuation">(</span><span class="token function">jsonConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         template<span class="token punctuation">.</span><span class="token function">setExchange</span><span class="token punctuation">(</span>TOPIC_EXCHANGE<span class="token punctuation">)</span><span class="token punctuation">;</span>         template<span class="token punctuation">.</span><span class="token function">setConfirmCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span>correlationData<span class="token punctuation">,</span> ack<span class="token punctuation">,</span> cause<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span>ack<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"消息：{}发送成功"</span><span class="token punctuation">,</span> correlationData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{<!-- --></span>                 log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"消息：{}发送失败，失败原因为：{}"</span><span class="token punctuation">,</span> correlationData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cause<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          template<span class="token punctuation">.</span><span class="token function">setMandatory</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         template<span class="token punctuation">.</span><span class="token function">setReturnsCallback</span><span class="token punctuation">(</span>returned<span class="token operator">-&gt;</span><span class="token punctuation">{<!-- --></span>             log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"消息：{}路由失败, 失败原因为：{}"</span><span class="token punctuation">,</span> returned<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> returned<span class="token punctuation">.</span><span class="token function">getReplyText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> template<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">TopicExchange</span><span class="token function">topicExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">TopicExchange</span><span class="token punctuation">(</span>TOPIC_EXCHANGE<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">Queue</span><span class="token function">queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">Queue</span><span class="token punctuation">(</span>QUEUE_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">Binding</span><span class="token function">binding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token class-name">BindingBuilder</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token function">queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token function">topicExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token string">"my.test.*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span><span class="token class-name">Jackson2JsonMessageConverter</span><span class="token function">jsonConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">Jackson2JsonMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>配置文件：</p> <pre><code class="prism language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span><span class="token key atrule">host</span><span class="token punctuation">:</span> localhost<span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">5672</span><span class="token key atrule">username</span><span class="token punctuation">:</span> admin<span class="token key atrule">password</span><span class="token punctuation">:</span> admin<span class="token key atrule">virtual-host</span><span class="token punctuation">:</span> my_vhost<span class="token comment"># 消息确认（ACK）</span><span class="token key atrule">publisher-confirm-type</span><span class="token punctuation">:</span> CORRELATED<span class="token comment">#correlated #确认消息已发送到交换机(Exchange)</span><span class="token key atrule">publisher-returns</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token comment">#确认消息已发送到队列(Queue)</span></code></pre> <p>生产者：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">PublisherService</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">RabbitTemplate</span> rabbitTemplate<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">CorrelationData</span> correlationData<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">CorrelationData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">"my.test.message"</span><span class="token punctuation">,</span><span class="token keyword">new</span><span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"Kleven"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> correlationData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <pre><code class="prism language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@ToString</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">User</span><span class="token keyword">implements</span><span class="token class-name">Serializable</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token keyword">long</span> serialVersionUID<span class="token operator">=</span><span class="token operator">-</span><span class="token number">5079682733940745661L</span><span class="token punctuation">;</span><span class="token keyword">private</span><span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token keyword">private</span><span class="token class-name">Integer</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h3><a id="NONE_110" rel="nofollow"></a>模式一、NONE</h3> <p>当确认模式设置为NONE时，只要中间件投递了消息就认为成功并将消息从队列中移除。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues<span class="token operator">=</span><span class="token string">"myQueue"</span><span class="token punctuation">,</span> messageConverter<span class="token operator">=</span><span class="token string">"jsonConverter"</span><span class="token punctuation">,</span> ackMode<span class="token operator">=</span><span class="token string">"NONE"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">noneAckListener</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"收到消息 -&gt; {}"</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 添加个错误用于测试</span><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>结果：<br /> 可以看到，即使消费者出错了，队列中的消息依然被删除了。<img decoding="async" src="http://img.555519.xyz/uploads3/20220820/640fa1ce37d017f617cff3c1df07f2eb.jpg" alt="Spring-RabbitMQ 消费者消息确认案例实践"></p> <h3><a id="MANUAL_124" rel="nofollow"></a>模式二、MANUAL</h3> <h3><a id="channelbasicAck__125" rel="nofollow"></a>channel.basicAck 确认一个或多个消息</h3> <pre><code class="prism language-java"><span class="token comment">/** * @param deliveryTag 当前消息的投递标签，是一个自增的数字。 * @param multiple true：确认 deliveryTag &lt;= 当前消息deliveryTag 的所有消息； false：只确认当前收到的消息。 */</span><span class="token keyword">void</span><span class="token function">basicAck</span><span class="token punctuation">(</span><span class="token keyword">long</span> deliveryTag<span class="token punctuation">,</span><span class="token keyword">boolean</span> multiple<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">IOException</span><span class="token punctuation">;</span></code></pre> <pre><code class="prism language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">Jackson2JsonMessageConverter</span> jsonConverter<span class="token punctuation">;</span><span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues<span class="token operator">=</span><span class="token string">"myQueue"</span><span class="token punctuation">,</span> ackMode<span class="token operator">=</span><span class="token string">"MANUAL"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">manualAckListener</span><span class="token punctuation">(</span><span class="token class-name">Message</span> message<span class="token punctuation">,</span><span class="token class-name">Channel</span> channel<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">IOException</span><span class="token punctuation">{<!-- --></span><span class="token keyword">long</span> deliveryTag<span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"成功消费消息 -&gt; {}"</span><span class="token punctuation">,</span> jsonConverter<span class="token punctuation">.</span><span class="token function">fromMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          channel<span class="token punctuation">.</span><span class="token function">basicAck</span><span class="token punctuation">(</span>deliveryTag<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>结果：<br /> 消息消费成功，且从队列中删除。</p> <pre><code class="prism language-bash">消息：aaa9b3b7-85b4-42fb-8a12-0aad488817f1发送成功 成功消费消息 -<span class="token operator">&gt;</span> User<span class="token punctuation">(</span>name<span class="token operator">=</span>Kleven,<span class="token assign-left variable">age</span><span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/7296f9e8317cca2b597912f9da0c5f9f.jpg" alt="Spring-RabbitMQ 消费者消息确认案例实践"></p> <h3><a id="channelbasicNack__154" rel="nofollow"></a>channel.basicNack 拒绝一个或多个消息</h3> <pre><code class="prism language-java"><span class="token comment">/**      *      * @param multiple 拒绝 deliveryTag &lt;= 当前消息deliveryTag 的所有消息； false：只拒绝当前收到的消息。      * @param requeue true 将拒绝对的消息重新加入队列。      */</span><span class="token keyword">void</span><span class="token function">basicNack</span><span class="token punctuation">(</span><span class="token keyword">long</span> deliveryTag<span class="token punctuation">,</span><span class="token keyword">boolean</span> multiple<span class="token punctuation">,</span><span class="token keyword">boolean</span> requeue<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">IOException</span><span class="token punctuation">;</span></code></pre> <pre><code class="prism language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">Jackson2JsonMessageConverter</span> jsonConverter<span class="token punctuation">;</span><span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues<span class="token operator">=</span><span class="token string">"myQueue"</span><span class="token punctuation">,</span> ackMode<span class="token operator">=</span><span class="token string">"MANUAL"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">manualAckListener</span><span class="token punctuation">(</span><span class="token class-name">Message</span> message<span class="token punctuation">,</span><span class="token class-name">Channel</span> channel<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">IOException</span><span class="token punctuation">{<!-- --></span><span class="token keyword">long</span> deliveryTag<span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"消费消息 -&gt; {}"</span><span class="token punctuation">,</span> jsonConverter<span class="token punctuation">.</span><span class="token function">fromMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          channel<span class="token punctuation">.</span><span class="token function">basicNack</span><span class="token punctuation">(</span>deliveryTag<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>结果：<br /> 当 requeue 为 true时，拒绝消息后消息从重新入队，可以看到队列中任然有一条数据。<br /> 当 requeue 为 false时，拒绝消息后消息也还是从队列中删除掉了。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/88803d1dedce6dad3af75420bef01044.jpg" alt="Spring-RabbitMQ 消费者消息确认案例实践"></p> <h3><a id="AUTO_185" rel="nofollow"></a>模式三、AUTO</h3> <p>默认值，消费者成功时认为成功并从队列中删除消息。消费者失败时认为失败，不会从队列中删除消息。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues<span class="token operator">=</span><span class="token string">"myQueue"</span><span class="token punctuation">,</span> messageConverter<span class="token operator">=</span><span class="token string">"jsonConverter"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">autoAckListener</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"收到消息 -&gt; {}"</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 添加个错误用于测试</span><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>结果：<br /> 可以看到，消费者出错后，消息依然在队列中。当移除消费者中的错误代码后，成功消费消息后，队列中的数据被删除。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220820/7e138160a92502c43e75627fe071c83f.jpg" alt="Spring-RabbitMQ 消费者消息确认案例实践"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-50383.htm">宠物医院的审批流程是什么（宠物医院申请条件）</a></p>
                                        <p>下一个：<a href="/news/article-50895.htm">动物疫苗赚钱吗知乎（做动物疫苗前景）</a></p>
                                    </div>
                                            </div>
                        </div>
                    </section><!-- #clients -->
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default" style="margin-top: 2rem;">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-48845.htm" title="大数据之hive Serde序列化/反序列化性能对比">大数据之hive Serde序列化/反序列化性能对比</a></li>
                        <li class="py-2"><a href="/news/article-27491.htm" title="宠物领养平台app 小程序下载苹果 宠物领养平台app 小程序下载苹果版">宠物领养平台app 小程序下载苹果 宠物领养平台app 小程序下载苹果版</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-21-free-v2ray.htm" title="1月21日18.1M/S|SSR/V2ray/Clash/Shadowrocket免费节点每天更新订阅链接，代理机场推荐">1月21日18.1M/S|SSR/V2ray/Clash/Shadowrocket免费节点每天更新订阅链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-34925.htm" title="springboot Jar包 秒部署到Linux服务器运行">springboot Jar包 秒部署到Linux服务器运行</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-30-free-v2ray.htm" title="12月30日20.3M/S|SSR/Clash/V2ray/Shadowrocket免费节点每天更新订阅链接，代理机场推荐">12月30日20.3M/S|SSR/Clash/V2ray/Shadowrocket免费节点每天更新订阅链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-50895.htm" title="动物疫苗赚钱吗知乎（做动物疫苗前景）">动物疫苗赚钱吗知乎（做动物疫苗前景）</a></li>
                        <li class="py-2"><a href="/news/article-41438.htm" title="PHP类抽象">PHP类抽象</a></li>
                        <li class="py-2"><a href="/news/article-31201.htm" title="买宠物粮食上哪个网站好（买宠物粮食的app）">买宠物粮食上哪个网站好（买宠物粮食的app）</a></li>
                        <li class="py-2"><a href="/news/article-29335.htm" title="动物医院大众点评评语怎么写啊 动物医院大众点评评语怎么写啊英语">动物医院大众点评评语怎么写啊 动物医院大众点评评语怎么写啊英语</a></li>
                        <li class="py-2"><a href="/news/article-30116.htm" title="新手开店适合开什么店成本低的店铺（适合新手开店的平台有哪些）">新手开店适合开什么店成本低的店铺（适合新手开店的平台有哪些）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </main>
        <!--==========================
    Footer
  ============================-->
    <footer id="footer">
        <div class="container">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    ShareFreeNode节点订阅站 版权所有
                    <br />
                    Powered by WordPress
            </div>
            <div class="credits">
            </div>
        </div>
    </footer><!-- #footer -->
    <a href="#" class="back-to-top"><i class="fa fa-chevron-up"></i></a>
    <!-- JavaScript  -->
    <script src="/assets/website/js/frontend/sharefreenode/lib/jquery/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/jquery/jquery-migrate.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/easing/easing.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/superfish/hoverIntent.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/superfish/superfish.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/wow/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/magnific-popup/magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/sticky/sticky.js"></script>
    <script src="contact/jqBootstrapValidation.js"></script>
    <script src="contact/contact_me.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>