<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <meta charset="utf-8">
    <link rel="canonical" href="https://sharefreenode.github.io/news/article-91775.htm" />
    <title>spring boot 导入导出</title>
        <meta name="description" content="private final static Logger logger = LoggerFactory.getLogger(ExcelUtils.class);     /**      * @para" />
        <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <!-- Favicons -->
    <link rel="icon" href="/assets/website/img/sharefreenode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ShareFreeNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sharefreenode.github.io/news/article-91775.htm" />
    <meta property="og:site_name" content="ShareFreeNode节点订阅站" />
    <meta property="og:title" content="spring boot 导入导出" />
    <meta property="og:image" content="https://sharefreenode.github.io/uploads/20240415/def290b4130eb308b1fbe53c55454ab5.webp" />
        <meta property="og:release_date" content="2025-04-09T09:16:40" />
    <meta property="og:updated_time" content="2025-04-09T09:16:40" />
        <meta property="og:description" content="private final static Logger logger = LoggerFactory.getLogger(ExcelUtils.class);     /**      * @para" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="spring boot 导入导出">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <link href="/assets/website/img/sharefreenode/apple-touch-icon.png" rel="apple-touch-icon">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,700,700i|Raleway:300,400,500,700,800|Montserrat:300,400,700" rel="stylesheet">
    <!-- Bootstrap CSS File -->
    <link href="/assets/website/js/frontend/sharefreenode/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- Libraries CSS Files -->
    <link href="/assets/website/js/frontend/sharefreenode/lib/font-awesome/css/font-awesome.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/animate/animate.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/ionicons/css/ionicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/magnific-popup/magnific-popup.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/sharefreenode/lib/ionicons/css/ionicons.min.css" rel="stylesheet">
    <!-- Main Stylesheet File -->
    <link href="/assets/website/css/sharefreenode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-300HPJ3F69"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-300HPJ3F69');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="body" data-page="detail">
    <!--==========================
    Header
  ============================-->
<header id="header">
    <div class="container">
        <div id="logo" class="pull-left">
            <a href="/">
                        Share<span>FreeNode</span>            </a>
        </div>
        <nav id="nav-menu-container">
            <ul class="nav-menu">
                                <li><a href="/">首页</a></li>
                                <li><a href="/free-nodes/">免费节点</a></li>
                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                <li><a href="/client.htm">客户端</a></li>
                                <li><a href="/news/">新闻资讯</a></li>
                            </ul>
        </nav><!-- #nav-menu-container -->
    </div>
</header><!-- #header -->
    <!--==========================
    Page Banner Section
  ============================-->
    <section id="innerBanner">
        <div class="inner-content">
            <h2><span>spring boot 导入导出</span></h2>
            <p><a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span></p>
        </div>
    </section><!-- #Page Banner -->
    <main id="main">
        <!--==========================
      Clients Section
    ============================-->
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <section id="clients" class="wow fadeInUp">
                        <div class="container">
                            <div class="section-header">
                                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <pre><code class="prism language-css">    private final static Logger logger = LoggerFactory.<span class="token function">getLogger</span><span class="token punctuation">(</span>ExcelUtils.class<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/**      * @param list     导出的数据list      * @param clazz    导出的对象class      * @param fileName 导出的文件名称      * @param response reponse      * @param &lt;T&gt;      */</span>     <span class="token selector">public static &lt;T&gt; void exportExcel(List&lt;T&gt; list, Class&lt;T&gt; clazz, String fileName, HttpServletResponse response)</span> <span class="token punctuation">{<!-- --></span>         SXSSFWorkbook workBook = <span class="token function">getWorkBook</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token selector">try</span> <span class="token punctuation">{<!-- --></span>             response.<span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.ms-excel;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             response.<span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             response.<span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> + URLEncoder.<span class="token function">encode</span><span class="token punctuation">(</span>fileName + <span class="token string">".xls"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             OutputStream output = response.<span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             BufferedOutputStream bufferedOutPut = new <span class="token function">BufferedOutputStream</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>             bufferedOutPut.<span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             workBook.<span class="token function">write</span><span class="token punctuation">(</span>bufferedOutPut<span class="token punctuation">)</span><span class="token punctuation">;</span>             bufferedOutPut.<span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token selector">catch (Exception e)</span> <span class="token punctuation">{<!-- --></span>             e.<span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>      <span class="token selector">private static &lt;T&gt; SXSSFWorkbook getWorkBook(List&lt;T&gt; list, Class&lt;T&gt; clazz)</span> <span class="token punctuation">{<!-- --></span>         SXSSFWorkbook wb = new <span class="token function">SXSSFWorkbook</span><span class="token punctuation">(</span>100<span class="token punctuation">)</span><span class="token punctuation">;</span>         Sheet sheet = wb.<span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Row row = sheet.<span class="token function">createRow</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>         row.<span class="token function">setHeightInPoints</span><span class="token punctuation">(</span>23<span class="token punctuation">)</span><span class="token punctuation">;</span>         Field[] declaredFields = <span class="token function">getAllFields</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>         //添加序号         Cell cellOrder = row.<span class="token function">createCell</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>         cellOrder.<span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"序号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         cellOrder.<span class="token function">setCellStyle</span><span class="token punctuation">(</span><span class="token function">titleStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         sheet.<span class="token function">setColumnWidth</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 10 * 256<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token selector">//设置表头         for (Field field : declaredFields)</span> <span class="token punctuation">{<!-- --></span>             Excel annotation = field.<span class="token function">getAnnotation</span><span class="token punctuation">(</span>Excel.class<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token selector">if (annotation != null)</span> <span class="token punctuation">{<!-- --></span>                 Cell cell = row.<span class="token function">createCell</span><span class="token punctuation">(</span>Integer.<span class="token function">valueOf</span><span class="token punctuation">(</span>annotation.<span class="token function">orderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                 cell.<span class="token function">setCellValue</span><span class="token punctuation">(</span>annotation.<span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 cell.<span class="token function">setCellStyle</span><span class="token punctuation">(</span><span class="token function">titleStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 //设置列的宽度                 sheet.<span class="token function">setColumnWidth</span><span class="token punctuation">(</span>Integer.<span class="token function">valueOf</span><span class="token punctuation">(</span>annotation.<span class="token function">orderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token punctuation">(</span>int<span class="token punctuation">)</span>annotation.<span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> * 256<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         // 遍历集合数据，产生数据行         Iterator&lt;?&gt; it = list.<span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         int index = 0<span class="token punctuation">;</span>         <span class="token selector">while (it.hasNext())</span> <span class="token punctuation">{<!-- --></span>             index++<span class="token punctuation">;</span>             row = sheet.<span class="token function">createRow</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>             Cell cell = row.<span class="token function">createCell</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>             cell.<span class="token function">setCellStyle</span><span class="token punctuation">(</span><span class="token function">orderStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             cell.<span class="token function">setCellValue</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>             row.<span class="token function">setHeightInPoints</span><span class="token punctuation">(</span>18<span class="token punctuation">)</span><span class="token punctuation">;</span>             T t = <span class="token punctuation">(</span>T<span class="token punctuation">)</span> it.<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             // 利用反射，根据javabean属性的先后顺序，动态调用<span class="token function">getXxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法得到属性值             Field[] fields = <span class="token function">getAllFields</span><span class="token punctuation">(</span>t.<span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token selector">for (Field field : fields)</span> <span class="token punctuation">{<!-- --></span>                 Excel annotation = field.<span class="token function">getAnnotation</span><span class="token punctuation">(</span>Excel.class<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token selector">if (annotation != null)</span> <span class="token punctuation">{<!-- --></span>                     cell = row.<span class="token function">createCell</span><span class="token punctuation">(</span>Integer.<span class="token function">valueOf</span><span class="token punctuation">(</span>annotation.<span class="token function">orderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                     cell.<span class="token function">setCellStyle</span><span class="token punctuation">(</span><span class="token function">contentStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String fieldName = field.<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String getMethodName = <span class="token string">"get"</span>                             + fieldName.<span class="token function">substring</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 1<span class="token punctuation">)</span>.<span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                             + fieldName.<span class="token function">substring</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token selector">try</span> <span class="token punctuation">{<!-- --></span>                         <span class="token selector">Method getMethod = t.getClass().getMethod(getMethodName,                                 new Class[]</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token selector">Object value = getMethod.invoke(t, new Object[]</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         cell.<span class="token function">setCellValue</span><span class="token punctuation">(</span>null == value ? <span class="token string">""</span> <span class="token punctuation">:</span> String.<span class="token function">valueOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span> <span class="token selector">catch (Exception e)</span> <span class="token punctuation">{<!-- --></span>                         e.<span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         return wb<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token selector">//设置标题样式     private static CellStyle titleStyle(SXSSFWorkbook wb)</span> <span class="token punctuation">{<!-- --></span>         CellStyle cellStyle = <span class="token function">contentStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置居中         cellStyle.<span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment.CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置单元格背景颜色         cellStyle.<span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors.GREY_25_PERCENT.<span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置单元格填充样式<span class="token punctuation">(</span>使用纯色背景颜色填充<span class="token punctuation">)</span>         cellStyle.<span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType.SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置字体加粗         Font font = wb.<span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         font.<span class="token function">setBold</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>         font.<span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span>short<span class="token punctuation">)</span> 12<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置字体         font.<span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         cellStyle.<span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>         return cellStyle<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token selector">//设置单元格样式     private static CellStyle contentStyle(SXSSFWorkbook wb)</span> <span class="token punctuation">{<!-- --></span>         //给单元格设置样式         CellStyle cellStyle = wb.<span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Font font = wb.<span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置字体大小         font.<span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span>short<span class="token punctuation">)</span> 11<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置字体         font.<span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         //给字体设置样式         cellStyle.<span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>         //字体设置边框         cellStyle.<span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle.THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>         cellStyle.<span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle.THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>         //设置垂直居中         cellStyle.<span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment.CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>         return cellStyle<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token selector">//设置单元格样式     private static CellStyle orderStyle(SXSSFWorkbook wb)</span> <span class="token punctuation">{<!-- --></span>         CellStyle cellStyle = <span class="token function">contentStyle</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">;</span>         cellStyle.<span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment.CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>         return cellStyle<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token selector">private static &lt;T&gt; Field[] getAllFields(Class&lt;T&gt; clazz)</span> <span class="token punctuation">{<!-- --></span>         Field[] declaredFields = clazz.<span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Class superClass = clazz.<span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token selector">if (!superClass.equals(Object.class))</span> <span class="token punctuation">{<!-- --></span>             Field[] superFields = superClass.<span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             int sonLength = declaredFields.length<span class="token punctuation">;</span>             int superLength = superFields.length<span class="token punctuation">;</span>             // 合并两个数组             Field[] newFields = new Field[sonLength + superLength]<span class="token punctuation">;</span>             System.<span class="token function">arraycopy</span><span class="token punctuation">(</span>declaredFields<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> newFields<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> sonLength<span class="token punctuation">)</span><span class="token punctuation">;</span>             System.<span class="token function">arraycopy</span><span class="token punctuation">(</span>superFields<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> newFields<span class="token punctuation">,</span> sonLength<span class="token punctuation">,</span> superLength<span class="token punctuation">)</span><span class="token punctuation">;</span>             return newFields<span class="token punctuation">;</span>         <span class="token punctuation">}</span>         return declaredFields<span class="token punctuation">;</span>     <span class="token punctuation">}</span>            private static final String XLS = <span class="token string">"xls"</span><span class="token punctuation">;</span>         private static final String XLSX = <span class="token string">"xlsx"</span><span class="token punctuation">;</span>          <span class="token comment">/**          * 根据文件后缀名类型获取对应的工作簿对象          * @param inputStream 读取文件的输入流          * @param fileType 文件后缀名类型（xls或xlsx）          * @return 包含文件数据的工作簿对象          * @throws IOException          */</span>         <span class="token selector">public static Workbook getWorkbook(InputStream inputStream, String fileType) throws IOException</span> <span class="token punctuation">{<!-- --></span>             Workbook workbook = null<span class="token punctuation">;</span>             <span class="token selector">if (fileType.equalsIgnoreCase(XLS))</span> <span class="token punctuation">{<!-- --></span>                 workbook = new <span class="token function">HSSFWorkbook</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token selector">else if (fileType.equalsIgnoreCase(XLSX))</span> <span class="token punctuation">{<!-- --></span>                 workbook = new <span class="token function">XSSFWorkbook</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             return workbook<span class="token punctuation">;</span>         <span class="token punctuation">}</span> </code></pre> <p>//导入</p> <pre><code class="prism language-css"> <span class="token selector">public void add(MultipartFile file)</span> <span class="token punctuation">{<!-- --></span>         String fileName = file.<span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         File file1 = new <span class="token function">File</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>         ImportParams params = new <span class="token function">ImportParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setTitleRows</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setHeadRows</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">;</span>          List&lt;Bill&gt; bills = ExcelImportUtil.<span class="token function">importExcel</span><span class="token punctuation">(</span>file1<span class="token punctuation">,</span> Bill.class<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token selector">for (Bill bill : bills)</span> <span class="token punctuation">{<!-- --></span>             billlMapper.<span class="token function">insert</span><span class="token punctuation">(</span>bill<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> </code></pre> <pre><code>} //导出 </code></pre> <pre><code class="prism language-css">  <span class="token atrule"><span class="token rule">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/exportExcelDc"</span><span class="token punctuation">)</span>     public void <span class="token function">exportExcelDc</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span> throws Exception</span> <span class="token punctuation">{<!-- --></span>          List&lt;Bill&gt; list = billService.<span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ExcelUtils.<span class="token function">exportExcel</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> Bill.class<span class="token punctuation">,</span> <span class="token string">"数据"</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  </code></pre> <p>//另一种导出</p> <pre><code class="prism language-css">    <span class="token atrule"><span class="token rule">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/exportExcelDc1"</span><span class="token punctuation">)</span>     public void <span class="token function">exportExcelDc1</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span> throws Exception</span> <span class="token punctuation">{<!-- --></span>         ExportParams params = new <span class="token function">ExportParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"年度账单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setSheetName</span><span class="token punctuation">(</span><span class="token string">"年度账单表"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params.<span class="token function">setType</span><span class="token punctuation">(</span>ExcelType.XSSF<span class="token punctuation">)</span><span class="token punctuation">;</span>         List&lt;Bill&gt; list = billService.<span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          Workbook workbook = ExcelExportUtil.<span class="token function">exportExcel</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> Bill.class<span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>         response.<span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.ms-excel;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         response.<span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         response.<span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> + URLEncoder.<span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">"测试"</span> + <span class="token string">".xls"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         OutputStream output = response.<span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         BufferedOutputStream bufferedOutPut = new <span class="token function">BufferedOutputStream</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>         bufferedOutPut.<span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         workbook.<span class="token function">write</span><span class="token punctuation">(</span>bufferedOutPut<span class="token punctuation">)</span><span class="token punctuation">;</span>         bufferedOutPut.<span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <pre><code>// 注解   @Excel(name = "序号",orderNum = "0") </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-91016.htm">sql server排查死锁优化性能_MsSql_</a></p>
                                        <p>下一个：<a href="/news/article-91776.htm">Python中位置参数、关键字参数、默认参数和不定长参数(非固定参数)的简介</a></p>
                                    </div>
                                            </div>
                        </div>
                    </section><!-- #clients -->
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default" style="margin-top: 2rem;">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-88108.htm" title="养猫应该打什么针（养猫应该打什么针呢）">养猫应该打什么针（养猫应该打什么针呢）</a></li>
                        <li class="py-2"><a href="/news/article-83093.htm" title="从JS执行栈角度图解递归以及二叉树的前、中、后遍历的底层差异 _在线工具">从JS执行栈角度图解递归以及二叉树的前、中、后遍历的底层差异 _在线工具</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-11-free-high-speed-nodes.htm" title="4月11日18.4M/S|Shadowrocket/SSR/Clash/V2ray免费节点每天更新订阅链接，代理机场推荐">4月11日18.4M/S|Shadowrocket/SSR/Clash/V2ray免费节点每天更新订阅链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-8-free-subscribe-node.htm" title="3月8日22.8M/S|SSR/Clash/V2ray/Shadowrocket免费节点每天更新订阅链接，代理机场推荐">3月8日22.8M/S|SSR/Clash/V2ray/Shadowrocket免费节点每天更新订阅链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-66974.htm" title="Pandas 如何处理超大规模数据">Pandas 如何处理超大规模数据</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-2-clash-node-daily-updates.htm" title="4月2日19.9M/S|Clash/V2ray/SSR/Shadowrocket免费节点每天更新订阅链接，代理机场推荐">4月2日19.9M/S|Clash/V2ray/SSR/Shadowrocket免费节点每天更新订阅链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-89580.htm" title="卖猫的宠物市场（卖猫的宠物市场在哪里）">卖猫的宠物市场（卖猫的宠物市场在哪里）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-free-clash.htm" title="3月13日18.3M/S|Shadowrocket/SSR/V2ray/Clash免费节点每天更新订阅链接，代理机场推荐">3月13日18.3M/S|Shadowrocket/SSR/V2ray/Clash免费节点每天更新订阅链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-66350.htm" title="附近哪里有狗粮卖（附近哪里有狗粮卖的地方）">附近哪里有狗粮卖（附近哪里有狗粮卖的地方）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-18-clash-node-daily-updates.htm" title="3月18日18.9M/S|Shadowrocket/SSR/Clash/V2ray免费节点每天更新订阅链接，代理机场推荐">3月18日18.9M/S|Shadowrocket/SSR/Clash/V2ray免费节点每天更新订阅链接，代理机场推荐</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </main>
        <!--==========================
    Footer
  ============================-->
    <footer id="footer">
        <div class="container">
            <div class="copyright">
                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    ShareFreeNode节点订阅站 版权所有
                    <br />
                    Powered by WordPress
            </div>
            <div class="credits">
            </div>
        </div>
    </footer><!-- #footer -->
    <a href="#" class="back-to-top"><i class="fa fa-chevron-up"></i></a>
    <!-- JavaScript  -->
    <script src="/assets/website/js/frontend/sharefreenode/lib/jquery/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/jquery/jquery-migrate.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/easing/easing.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/superfish/hoverIntent.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/superfish/superfish.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/wow/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/magnific-popup/magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/lib/sticky/sticky.js"></script>
    <script src="contact/jqBootstrapValidation.js"></script>
    <script src="contact/contact_me.js"></script>
    <script src="/assets/website/js/frontend/sharefreenode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>